package logic2;

import java.util.ArrayList;

import data_structure.Heap;


public class Logic {

	private Car[] carList;
	private Parser parser;
	private ArrayList<Order> orderList;
	private Heap<Order> priorityList;
	private Message messenger;

	public Logic(Parser p) {
		parser = p;
		carList = new Car[parser.getNCars()];
		priorityList = p.getHeap();
		
		for (int i = 0; i < parser.getNCars(); i++) {
			carList[i] = new Car();
		}
		
		while (!priorityList.isEmpty())	
			orderList.add(priorityList.pop());
	}
	
	public Order findAvailableOrder(int oc){
		for(Order x : orderList){
			if(x.getOrderCity() == oc)
				return x;
		}
		return null;
	}

	public void allocation(){
		
		while(!orderList.isEmpty()){
			for(int i = 0; i < parser.getNCars(); i++){
				if(!orderList.isEmpty()){
					Order tmp;
					Order order = orderList.remove(0);
					messenger.setNewTrip(new Trip());
					// twprzenie komunikatu
					int distance = parser.getMap().getShortestPath(order.getBaseCity(), order.getOrderCity());
					int [] vc = parser.getMap().getVisitedCities();
					for(int j = parser.getMap().getVCAL() - 2; j > 1; j--){
						tmp = this.findAvailableOrder(vc[j]);
						if(tmp != null){
							orderList.remove(tmp);
							//wypisz komunikat 
						}else
							break;
					}
				
				}else{
					break;
				}
			}
		}
		
	}
	
}
